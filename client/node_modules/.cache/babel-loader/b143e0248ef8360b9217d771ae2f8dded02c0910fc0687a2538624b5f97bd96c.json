{"ast":null,"code":"var _jsxFileName = \"/home/azmi/wealthwise/client/src/components/transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/Transaction.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transaction = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    category: \"\",\n    amount: \"\"\n  });\n  const [editingTransaction, setEditingTransaction] = useState(null);\n\n  // Fetch transactions from db.json\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\").then(res => res.json()).then(data => setTransactions(data)).catch(error => console.error(\"Error fetching transactions:\", error));\n  }, []);\n\n  // Handle input changes\n  const handleChange = e => {\n    setNewTransaction({\n      ...newTransaction,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Add new transaction\n  const handleAdd = e => {\n    e.preventDefault();\n    const newEntry = {\n      ...newTransaction,\n      id: transactions.length + 1,\n      amount: Number(newTransaction.amount)\n    };\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newEntry)\n    }).then(res => res.json()).then(data => {\n      setTransactions([...transactions, data]);\n      setNewTransaction({\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  // Edit transaction\n  const handleEdit = transaction => {\n    setEditingTransaction(transaction);\n    setNewTransaction({\n      category: transaction.category,\n      amount: transaction.amount\n    });\n  };\n\n  // Update transaction\n  const handleUpdate = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3000/transactions/${editingTransaction.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...editingTransaction,\n        amount: Number(newTransaction.amount)\n      })\n    }).then(res => res.json()).then(() => {\n      setTransactions(transactions.map(t => t.id === editingTransaction.id ? {\n        ...editingTransaction,\n        amount: Number(newTransaction.amount)\n      } : t));\n      setEditingTransaction(null);\n      setNewTransaction({\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  // Delete transaction\n  const handleDelete = id => {\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setTransactions(transactions.filter(t => t.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingTransaction ? handleUpdate : handleAdd,\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        value: newTransaction.category,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        placeholder: \"Amount\",\n        value: newTransaction.amount,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingTransaction ? \"Update\" : \"Add\", \" Transaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), editingTransaction && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingTransaction(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"transaction-list\",\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [transaction.category, \" - $\", transaction.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(transaction),\n          className: \"edit-btn\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(transaction.id),\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Transaction, \"pIYH04q/o9kTA6LGlHym3QY8D1M=\");\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transaction","_s","transactions","setTransactions","newTransaction","setNewTransaction","category","amount","editingTransaction","setEditingTransaction","fetch","then","res","json","data","catch","error","console","handleChange","e","target","name","value","handleAdd","preventDefault","newEntry","id","length","Number","method","headers","body","JSON","stringify","handleEdit","transaction","handleUpdate","map","t","handleDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/home/azmi/wealthwise/client/src/components/transaction.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Styles/Transaction.css\";\n\nconst Transaction = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({ category: \"\", amount: \"\" });\n  const [editingTransaction, setEditingTransaction] = useState(null);\n\n  // Fetch transactions from db.json\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\")\n      .then((res) => res.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching transactions:\", error));\n  }, []);\n\n  // Handle input changes\n  const handleChange = (e) => {\n    setNewTransaction({ ...newTransaction, [e.target.name]: e.target.value });\n  };\n\n  // Add new transaction\n  const handleAdd = (e) => {\n    e.preventDefault();\n    const newEntry = { ...newTransaction, id: transactions.length + 1, amount: Number(newTransaction.amount) };\n\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newEntry),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setTransactions([...transactions, data]);\n        setNewTransaction({ category: \"\", amount: \"\" });\n      });\n  };\n\n  // Edit transaction\n  const handleEdit = (transaction) => {\n    setEditingTransaction(transaction);\n    setNewTransaction({ category: transaction.category, amount: transaction.amount });\n  };\n\n  // Update transaction\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    fetch(`http://localhost:3000/transactions/${editingTransaction.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...editingTransaction, amount: Number(newTransaction.amount) }),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setTransactions(\n          transactions.map((t) =>\n            t.id === editingTransaction.id ? { ...editingTransaction, amount: Number(newTransaction.amount) } : t\n          )\n        );\n        setEditingTransaction(null);\n        setNewTransaction({ category: \"\", amount: \"\" });\n      });\n  };\n\n  // Delete transaction\n  const handleDelete = (id) => {\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      setTransactions(transactions.filter((t) => t.id !== id));\n    });\n  };\n\n  return (\n    <div className=\"transaction-container\">\n      <h1>Transaction Management</h1>\n\n      {/* Form for adding/updating transactions */}\n      <form onSubmit={editingTransaction ? handleUpdate : handleAdd} className=\"transaction-form\">\n        <input\n          type=\"text\"\n          name=\"category\"\n          placeholder=\"Category\"\n          value={newTransaction.category}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\"Amount\"\n          value={newTransaction.amount}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">{editingTransaction ? \"Update\" : \"Add\"} Transaction</button>\n        {editingTransaction && <button onClick={() => setEditingTransaction(null)}>Cancel</button>}\n      </form>\n\n      {/* Transaction List */}\n      <ul className=\"transaction-list\">\n        {transactions.map((transaction) => (\n          <li key={transaction.id} className=\"transaction-item\">\n            <span>{transaction.category} - ${transaction.amount}</span>\n            <button onClick={() => handleEdit(transaction)} className=\"edit-btn\">Edit</button>\n            <button onClick={() => handleDelete(transaction.id)} className=\"delete-btn\">Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Transaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}