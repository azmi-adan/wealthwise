{"ast":null,"code":"var _jsxFileName = \"/home/azmi/wealthwise/client/src/components/transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/Transaction.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transaction = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    category: \"\",\n    amount: \"\"\n  });\n  const [editingTransaction, setEditingTransaction] = useState(null);\n\n  // Fetch transactions from db.json\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\").then(res => res.json()).then(data => setTransactions(data)).catch(error => console.error(\"Error fetching transactions:\", error));\n  }, []);\n\n  // Handle input changes\n  const handleChange = e => {\n    setNewTransaction({\n      ...newTransaction,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Add new transaction\n  const handleAdd = e => {\n    e.preventDefault();\n    const newEntry = {\n      category: newTransaction.category,\n      amount: Number(newTransaction.amount)\n    };\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newEntry)\n    }).then(res => res.json()).then(data => {\n      setTransactions([...transactions, data]);\n      setNewTransaction({\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  // Edit transaction\n  const handleEdit = transaction => {\n    setEditingTransaction(transaction);\n    setNewTransaction({\n      category: transaction.category,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // ✅ Fixed Update transaction\n  const handleUpdate = e => {\n    e.preventDefault();\n    if (!editingTransaction) return;\n    const updatedTransaction = {\n      id: editingTransaction.id,\n      category: newTransaction.category,\n      amount: Number(newTransaction.amount)\n    };\n    fetch(`http://localhost:3000/transactions/${editingTransaction.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedTransaction)\n    }).then(res => res.json()).then(() => {\n      setTransactions(transactions.map(t => t.id === editingTransaction.id ? updatedTransaction : t));\n      setEditingTransaction(null);\n      setNewTransaction({\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  // Delete transaction\n  const handleDelete = id => {\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setTransactions(transactions.filter(t => t.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingTransaction ? handleUpdate : handleAdd,\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        value: newTransaction.category,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        placeholder: \"Amount\",\n        value: newTransaction.amount,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingTransaction ? \"Update\" : \"Add\", \" Transaction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), editingTransaction && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditingTransaction(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"transaction-list\",\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [transaction.category, \" - $\", transaction.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(transaction),\n          className: \"edit-btn\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(transaction.id),\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Transaction, \"pIYH04q/o9kTA6LGlHym3QY8D1M=\");\n_c = Transaction;\nexport default Transaction;\nvar _c;\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transaction","_s","transactions","setTransactions","newTransaction","setNewTransaction","category","amount","editingTransaction","setEditingTransaction","fetch","then","res","json","data","catch","error","console","handleChange","e","target","name","value","handleAdd","preventDefault","newEntry","Number","method","headers","body","JSON","stringify","handleEdit","transaction","toString","handleUpdate","updatedTransaction","id","map","t","handleDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/home/azmi/wealthwise/client/src/components/transaction.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Styles/Transaction.css\";\n\nconst Transaction = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({ category: \"\", amount: \"\" });\n  const [editingTransaction, setEditingTransaction] = useState(null);\n\n  // Fetch transactions from db.json\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\")\n      .then((res) => res.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => console.error(\"Error fetching transactions:\", error));\n  }, []);\n\n  // Handle input changes\n  const handleChange = (e) => {\n    setNewTransaction({ ...newTransaction, [e.target.name]: e.target.value });\n  };\n\n  // Add new transaction\n  const handleAdd = (e) => {\n    e.preventDefault();\n    const newEntry = { category: newTransaction.category, amount: Number(newTransaction.amount) };\n\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newEntry),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setTransactions([...transactions, data]);\n        setNewTransaction({ category: \"\", amount: \"\" });\n      });\n  };\n\n  // Edit transaction\n  const handleEdit = (transaction) => {\n    setEditingTransaction(transaction);\n    setNewTransaction({ category: transaction.category, amount: transaction.amount.toString() });\n  };\n\n  // ✅ Fixed Update transaction\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    if (!editingTransaction) return;\n\n    const updatedTransaction = {\n      id: editingTransaction.id,\n      category: newTransaction.category,\n      amount: Number(newTransaction.amount),\n    };\n\n    fetch(`http://localhost:3000/transactions/${editingTransaction.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updatedTransaction),\n    })\n      .then((res) => res.json())\n      .then(() => {\n        setTransactions(\n          transactions.map((t) => (t.id === editingTransaction.id ? updatedTransaction : t))\n        );\n        setEditingTransaction(null);\n        setNewTransaction({ category: \"\", amount: \"\" });\n      });\n  };\n\n  // Delete transaction\n  const handleDelete = (id) => {\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      setTransactions(transactions.filter((t) => t.id !== id));\n    });\n  };\n\n  return (\n    <div className=\"transaction-container\">\n      <h1>Transaction Management</h1>\n\n      {/* Form for adding/updating transactions */}\n      <form onSubmit={editingTransaction ? handleUpdate : handleAdd} className=\"transaction-form\">\n        <input\n          type=\"text\"\n          name=\"category\"\n          placeholder=\"Category\"\n          value={newTransaction.category}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\"Amount\"\n          value={newTransaction.amount}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">{editingTransaction ? \"Update\" : \"Add\"} Transaction</button>\n        {editingTransaction && (\n          <button type=\"button\" onClick={() => setEditingTransaction(null)}>\n            Cancel\n          </button>\n        )}\n      </form>\n\n      {/* Transaction List */}\n      <ul className=\"transaction-list\">\n        {transactions.map((transaction) => (\n          <li key={transaction.id} className=\"transaction-item\">\n            <span>{transaction.category} - ${transaction.amount}</span>\n            <button onClick={() => handleEdit(transaction)} className=\"edit-btn\">Edit</button>\n            <button onClick={() => handleDelete(transaction.id)} className=\"delete-btn\">Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Transaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}